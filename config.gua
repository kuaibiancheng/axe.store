con importPath = import('path')
con importConfig = import(importPath.pathConfigFile())
con formattedConfig = function(config) {
    var mirror = config['mirror']
    var urls = mirror['urls']
    var new_urls = []
    var i = 0
    var l = urls.length()
    while (i < l) {
        var url = urls[i]
        if (url.endswith('/')) {
            url = url.cut(0, url.length() - 1)
            config['mirror']['urls'][i] = url
        }
        i += 1
    }
    return config
}
con Config = class() {
    con new = function(config) {
        con _c = formattedConfig(config)
        con this.config = _c
        var this.isJson = false
        if (os.args[-1] == '--json') {
            this.isJson = true
        }
    }
    con mirrorUrl = function() {
        con config = this.config
        con mirror = config['mirror']
        con urls = mirror['urls']
        con index = mirror['active_mirror_url_index']
        con url = urls[index]
        return url
    }
    con switchedMirrorUrl = function(originalUrl) {
        con config = this.config
        con mirror = config['mirror']
        con urls = mirror['urls']
        con l = urls.length()
        var i = 0
        while (i < l) {
            con mirrorUrl = urls[i]
            if (originalUrl.has(mirrorUrl)) {
                con nextIndex = (i + 1) % l
                con nextUrl = urls[nextIndex]
                con newUrl = originalUrl.replace(mirrorUrl, nextUrl)
                return newUrl
            }
            i += 1
        }
    }
}
con config = Config.new(importConfig.axeConfig)